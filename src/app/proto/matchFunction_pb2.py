# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: app/proto/matchFunction.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='app/proto/matchFunction.proto',
  package='accelbyte.matchmaking.matchfunction',
  syntax='proto3',
  serialized_options=b'\n)net.accelbyte.matchmakingv2.matchfunctionP\001Z)accelbyte.net/matchmakingv2/matchfunction\252\002%AccelByte.MatchmakingV2.MatchFunction',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1d\x61pp/proto/matchFunction.proto\x12#accelbyte.matchmaking.matchfunction\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"P\n\x13GetStatCodesRequest\x12\x39\n\x05rules\x18\x01 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.Rules\"\"\n\x11StatCodesResponse\x12\r\n\x05\x63odes\x18\x01 \x03(\t\"\x8f\x01\n\x15ValidateTicketRequest\x12;\n\x06ticket\x18\x01 \x01(\x0b\x32+.accelbyte.matchmaking.matchfunction.Ticket\x12\x39\n\x05rules\x18\x02 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.Rules\".\n\x16ValidateTicketResponse\x12\x14\n\x0cvalid_ticket\x18\x01 \x01(\x08\"\x8d\x01\n\x13\x45nrichTicketRequest\x12;\n\x06ticket\x18\x01 \x01(\x0b\x32+.accelbyte.matchmaking.matchfunction.Ticket\x12\x39\n\x05rules\x18\x02 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.Rules\"S\n\x14\x45nrichTicketResponse\x12;\n\x06ticket\x18\x01 \x01(\x0b\x32+.accelbyte.matchmaking.matchfunction.Ticket\"\xd8\x02\n\x12MakeMatchesRequest\x12\x63\n\nparameters\x18\x01 \x01(\x0b\x32M.accelbyte.matchmaking.matchfunction.MakeMatchesRequest.MakeMatchesParametersH\x00\x12=\n\x06ticket\x18\x02 \x01(\x0b\x32+.accelbyte.matchmaking.matchfunction.TicketH\x00\x1a\x8d\x01\n\x15MakeMatchesParameters\x12\x39\n\x05scope\x18\x01 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.Scope\x12\x39\n\x05rules\x18\x02 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.RulesB\x0e\n\x0crequest_type\"J\n\rMatchResponse\x12\x39\n\x05match\x18\x01 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.Match\"\x1c\n\x05Scope\x12\x13\n\x0b\x61\x62_trace_id\x18\x01 \x01(\t\"\x15\n\x05Rules\x12\x0c\n\x04json\x18\x01 \x01(\t\"+\n\x05Party\x12\x10\n\x08party_id\x18\x01 \x01(\t\x12\x10\n\x08user_ids\x18\x02 \x03(\t\"\xb0\x03\n\x05Match\x12<\n\x07tickets\x18\x01 \x03(\x0b\x32+.accelbyte.matchmaking.matchfunction.Ticket\x12>\n\x05teams\x18\x02 \x03(\x0b\x32/.accelbyte.matchmaking.matchfunction.Match.Team\x12\x1a\n\x12region_preferences\x18\x03 \x03(\t\x12\x31\n\x10match_attributes\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x10\n\x08\x62\x61\x63kfill\x18\x05 \x01(\x08\x12\x13\n\x0bserver_name\x18\x06 \x01(\t\x12\x16\n\x0e\x63lient_version\x18\x07 \x01(\t\x12\x44\n\x0bserver_pool\x18\x08 \x01(\x0b\x32/.accelbyte.matchmaking.matchfunction.ServerPool\x1aU\n\x04Team\x12\x10\n\x08user_ids\x18\x01 \x03(\t\x12;\n\x07parties\x18\x02 \x03(\x0b\x32*.accelbyte.matchmaking.matchfunction.Party\"M\n\nServerPool\x12\x17\n\x0fserver_provider\x18\x01 \x01(\t\x12\x12\n\ndeployment\x18\x02 \x01(\t\x12\x12\n\nclaim_keys\x18\x03 \x03(\t\"\xd7\x03\n\x06Ticket\x12\x11\n\tticket_id\x18\x01 \x01(\t\x12\x12\n\nmatch_pool\x18\x02 \x01(\t\x12-\n\tCreatedAt\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12G\n\x07players\x18\x04 \x03(\x0b\x32\x36.accelbyte.matchmaking.matchfunction.Ticket.PlayerData\x12\x32\n\x11ticket_attributes\x18\x05 \x01(\x0b\x32\x17.google.protobuf.Struct\x12M\n\tlatencies\x18\x06 \x03(\x0b\x32:.accelbyte.matchmaking.matchfunction.Ticket.LatenciesEntry\x12\x18\n\x10party_session_id\x18\x07 \x01(\t\x12\x11\n\tnamespace\x18\x08 \x01(\t\x1aL\n\nPlayerData\x12\x11\n\tplayer_id\x18\x01 \x01(\t\x12+\n\nattributes\x18\x02 \x01(\x0b\x32\x17.google.protobuf.Struct\x1a\x30\n\x0eLatenciesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x8f\x03\n\x10\x42\x61\x63kfillProposal\x12\x1a\n\x12\x62\x61\x63kfill_ticket_id\x18\x01 \x01(\t\x12-\n\tCreatedAt\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x42\n\radded_tickets\x18\x03 \x03(\x0b\x32+.accelbyte.matchmaking.matchfunction.Ticket\x12R\n\x0eproposed_teams\x18\x04 \x03(\x0b\x32:.accelbyte.matchmaking.matchfunction.BackfillProposal.Team\x12\x13\n\x0bproposal_id\x18\x05 \x01(\t\x12\x12\n\nmatch_pool\x18\x06 \x01(\t\x12\x18\n\x10match_session_id\x18\x07 \x01(\t\x1aU\n\x04Team\x12\x10\n\x08user_ids\x18\x01 \x03(\t\x12;\n\x07parties\x18\x02 \x03(\x0b\x32*.accelbyte.matchmaking.matchfunction.Party\"\xf9\x02\n\x1a\x42\x61\x63kfillMakeMatchesRequest\x12k\n\nparameters\x18\x01 \x01(\x0b\x32U.accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.MakeMatchesParametersH\x00\x12N\n\x0f\x62\x61\x63kfill_ticket\x18\x02 \x01(\x0b\x32\x33.accelbyte.matchmaking.matchfunction.BackfillTicketH\x00\x1a\x8d\x01\n\x15MakeMatchesParameters\x12\x39\n\x05scope\x18\x01 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.Scope\x12\x39\n\x05rules\x18\x02 \x01(\x0b\x32*.accelbyte.matchmaking.matchfunction.RulesB\x0e\n\x0crequest_type\"d\n\x10\x42\x61\x63kfillResponse\x12P\n\x11\x62\x61\x63kfill_proposal\x18\x01 \x01(\x0b\x32\x35.accelbyte.matchmaking.matchfunction.BackfillProposal\"\xd6\x04\n\x0e\x42\x61\x63kfillTicket\x12\x11\n\tticket_id\x18\x01 \x01(\t\x12\x12\n\nmatch_pool\x18\x02 \x01(\t\x12-\n\tCreatedAt\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12W\n\rpartial_match\x18\x04 \x01(\x0b\x32@.accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch\x12\x18\n\x10match_session_id\x18\x05 \x01(\t\x1aU\n\x04Team\x12\x10\n\x08user_ids\x18\x01 \x03(\t\x12;\n\x07parties\x18\x02 \x03(\x0b\x32*.accelbyte.matchmaking.matchfunction.Party\x1a\xa3\x02\n\x0cPartialMatch\x12<\n\x07tickets\x18\x01 \x03(\x0b\x32+.accelbyte.matchmaking.matchfunction.Ticket\x12G\n\x05teams\x18\x02 \x03(\x0b\x32\x38.accelbyte.matchmaking.matchfunction.BackfillTicket.Team\x12\x1a\n\x12region_preferences\x18\x03 \x03(\t\x12\x31\n\x10match_attributes\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x10\n\x08\x62\x61\x63kfill\x18\x05 \x01(\x08\x12\x13\n\x0bserver_name\x18\x06 \x01(\t\x12\x16\n\x0e\x63lient_version\x18\x07 \x01(\t2\xb4\x05\n\rMatchFunction\x12\x80\x01\n\x0cGetStatCodes\x12\x38.accelbyte.matchmaking.matchfunction.GetStatCodesRequest\x1a\x36.accelbyte.matchmaking.matchfunction.StatCodesResponse\x12\x89\x01\n\x0eValidateTicket\x12:.accelbyte.matchmaking.matchfunction.ValidateTicketRequest\x1a;.accelbyte.matchmaking.matchfunction.ValidateTicketResponse\x12\x83\x01\n\x0c\x45nrichTicket\x12\x38.accelbyte.matchmaking.matchfunction.EnrichTicketRequest\x1a\x39.accelbyte.matchmaking.matchfunction.EnrichTicketResponse\x12~\n\x0bMakeMatches\x12\x37.accelbyte.matchmaking.matchfunction.MakeMatchesRequest\x1a\x32.accelbyte.matchmaking.matchfunction.MatchResponse(\x01\x30\x01\x12\x8d\x01\n\x0f\x42\x61\x63kfillMatches\x12?.accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest\x1a\x35.accelbyte.matchmaking.matchfunction.BackfillResponse(\x01\x30\x01\x42\x80\x01\n)net.accelbyte.matchmakingv2.matchfunctionP\x01Z)accelbyte.net/matchmakingv2/matchfunction\xaa\x02%AccelByte.MatchmakingV2.MatchFunctionb\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])




_GETSTATCODESREQUEST = _descriptor.Descriptor(
  name='GetStatCodesRequest',
  full_name='accelbyte.matchmaking.matchfunction.GetStatCodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='accelbyte.matchmaking.matchfunction.GetStatCodesRequest.rules', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=133,
  serialized_end=213,
)


_STATCODESRESPONSE = _descriptor.Descriptor(
  name='StatCodesResponse',
  full_name='accelbyte.matchmaking.matchfunction.StatCodesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='codes', full_name='accelbyte.matchmaking.matchfunction.StatCodesResponse.codes', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=215,
  serialized_end=249,
)


_VALIDATETICKETREQUEST = _descriptor.Descriptor(
  name='ValidateTicketRequest',
  full_name='accelbyte.matchmaking.matchfunction.ValidateTicketRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ticket', full_name='accelbyte.matchmaking.matchfunction.ValidateTicketRequest.ticket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules', full_name='accelbyte.matchmaking.matchfunction.ValidateTicketRequest.rules', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=395,
)


_VALIDATETICKETRESPONSE = _descriptor.Descriptor(
  name='ValidateTicketResponse',
  full_name='accelbyte.matchmaking.matchfunction.ValidateTicketResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='valid_ticket', full_name='accelbyte.matchmaking.matchfunction.ValidateTicketResponse.valid_ticket', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=397,
  serialized_end=443,
)


_ENRICHTICKETREQUEST = _descriptor.Descriptor(
  name='EnrichTicketRequest',
  full_name='accelbyte.matchmaking.matchfunction.EnrichTicketRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ticket', full_name='accelbyte.matchmaking.matchfunction.EnrichTicketRequest.ticket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules', full_name='accelbyte.matchmaking.matchfunction.EnrichTicketRequest.rules', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=446,
  serialized_end=587,
)


_ENRICHTICKETRESPONSE = _descriptor.Descriptor(
  name='EnrichTicketResponse',
  full_name='accelbyte.matchmaking.matchfunction.EnrichTicketResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ticket', full_name='accelbyte.matchmaking.matchfunction.EnrichTicketResponse.ticket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=589,
  serialized_end=672,
)


_MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS = _descriptor.Descriptor(
  name='MakeMatchesParameters',
  full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest.MakeMatchesParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scope', full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest.MakeMatchesParameters.scope', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules', full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest.MakeMatchesParameters.rules', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=862,
  serialized_end=1003,
)

_MAKEMATCHESREQUEST = _descriptor.Descriptor(
  name='MakeMatchesRequest',
  full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameters', full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest.parameters', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ticket', full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest.ticket', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='request_type', full_name='accelbyte.matchmaking.matchfunction.MakeMatchesRequest.request_type',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=675,
  serialized_end=1019,
)


_MATCHRESPONSE = _descriptor.Descriptor(
  name='MatchResponse',
  full_name='accelbyte.matchmaking.matchfunction.MatchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='match', full_name='accelbyte.matchmaking.matchfunction.MatchResponse.match', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1021,
  serialized_end=1095,
)


_SCOPE = _descriptor.Descriptor(
  name='Scope',
  full_name='accelbyte.matchmaking.matchfunction.Scope',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ab_trace_id', full_name='accelbyte.matchmaking.matchfunction.Scope.ab_trace_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1097,
  serialized_end=1125,
)


_RULES = _descriptor.Descriptor(
  name='Rules',
  full_name='accelbyte.matchmaking.matchfunction.Rules',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='json', full_name='accelbyte.matchmaking.matchfunction.Rules.json', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1127,
  serialized_end=1148,
)


_PARTY = _descriptor.Descriptor(
  name='Party',
  full_name='accelbyte.matchmaking.matchfunction.Party',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='party_id', full_name='accelbyte.matchmaking.matchfunction.Party.party_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='user_ids', full_name='accelbyte.matchmaking.matchfunction.Party.user_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1150,
  serialized_end=1193,
)


_MATCH_TEAM = _descriptor.Descriptor(
  name='Team',
  full_name='accelbyte.matchmaking.matchfunction.Match.Team',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_ids', full_name='accelbyte.matchmaking.matchfunction.Match.Team.user_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parties', full_name='accelbyte.matchmaking.matchfunction.Match.Team.parties', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1543,
  serialized_end=1628,
)

_MATCH = _descriptor.Descriptor(
  name='Match',
  full_name='accelbyte.matchmaking.matchfunction.Match',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tickets', full_name='accelbyte.matchmaking.matchfunction.Match.tickets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='teams', full_name='accelbyte.matchmaking.matchfunction.Match.teams', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='region_preferences', full_name='accelbyte.matchmaking.matchfunction.Match.region_preferences', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_attributes', full_name='accelbyte.matchmaking.matchfunction.Match.match_attributes', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='backfill', full_name='accelbyte.matchmaking.matchfunction.Match.backfill', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='server_name', full_name='accelbyte.matchmaking.matchfunction.Match.server_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='client_version', full_name='accelbyte.matchmaking.matchfunction.Match.client_version', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='server_pool', full_name='accelbyte.matchmaking.matchfunction.Match.server_pool', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_MATCH_TEAM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1196,
  serialized_end=1628,
)


_SERVERPOOL = _descriptor.Descriptor(
  name='ServerPool',
  full_name='accelbyte.matchmaking.matchfunction.ServerPool',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_provider', full_name='accelbyte.matchmaking.matchfunction.ServerPool.server_provider', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='deployment', full_name='accelbyte.matchmaking.matchfunction.ServerPool.deployment', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='claim_keys', full_name='accelbyte.matchmaking.matchfunction.ServerPool.claim_keys', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1630,
  serialized_end=1707,
)


_TICKET_PLAYERDATA = _descriptor.Descriptor(
  name='PlayerData',
  full_name='accelbyte.matchmaking.matchfunction.Ticket.PlayerData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='player_id', full_name='accelbyte.matchmaking.matchfunction.Ticket.PlayerData.player_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='accelbyte.matchmaking.matchfunction.Ticket.PlayerData.attributes', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2055,
  serialized_end=2131,
)

_TICKET_LATENCIESENTRY = _descriptor.Descriptor(
  name='LatenciesEntry',
  full_name='accelbyte.matchmaking.matchfunction.Ticket.LatenciesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='accelbyte.matchmaking.matchfunction.Ticket.LatenciesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='accelbyte.matchmaking.matchfunction.Ticket.LatenciesEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2133,
  serialized_end=2181,
)

_TICKET = _descriptor.Descriptor(
  name='Ticket',
  full_name='accelbyte.matchmaking.matchfunction.Ticket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ticket_id', full_name='accelbyte.matchmaking.matchfunction.Ticket.ticket_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_pool', full_name='accelbyte.matchmaking.matchfunction.Ticket.match_pool', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='CreatedAt', full_name='accelbyte.matchmaking.matchfunction.Ticket.CreatedAt', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='players', full_name='accelbyte.matchmaking.matchfunction.Ticket.players', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ticket_attributes', full_name='accelbyte.matchmaking.matchfunction.Ticket.ticket_attributes', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latencies', full_name='accelbyte.matchmaking.matchfunction.Ticket.latencies', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='party_session_id', full_name='accelbyte.matchmaking.matchfunction.Ticket.party_session_id', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='accelbyte.matchmaking.matchfunction.Ticket.namespace', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TICKET_PLAYERDATA, _TICKET_LATENCIESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1710,
  serialized_end=2181,
)


_BACKFILLPROPOSAL_TEAM = _descriptor.Descriptor(
  name='Team',
  full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.Team',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_ids', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.Team.user_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parties', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.Team.parties', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1543,
  serialized_end=1628,
)

_BACKFILLPROPOSAL = _descriptor.Descriptor(
  name='BackfillProposal',
  full_name='accelbyte.matchmaking.matchfunction.BackfillProposal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='backfill_ticket_id', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.backfill_ticket_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='CreatedAt', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.CreatedAt', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='added_tickets', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.added_tickets', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='proposed_teams', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.proposed_teams', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='proposal_id', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.proposal_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_pool', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.match_pool', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_session_id', full_name='accelbyte.matchmaking.matchfunction.BackfillProposal.match_session_id', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_BACKFILLPROPOSAL_TEAM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2184,
  serialized_end=2583,
)


_BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS = _descriptor.Descriptor(
  name='MakeMatchesParameters',
  full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.MakeMatchesParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scope', full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.MakeMatchesParameters.scope', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules', full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.MakeMatchesParameters.rules', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=862,
  serialized_end=1003,
)

_BACKFILLMAKEMATCHESREQUEST = _descriptor.Descriptor(
  name='BackfillMakeMatchesRequest',
  full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameters', full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.parameters', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='backfill_ticket', full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.backfill_ticket', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='request_type', full_name='accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.request_type',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2586,
  serialized_end=2963,
)


_BACKFILLRESPONSE = _descriptor.Descriptor(
  name='BackfillResponse',
  full_name='accelbyte.matchmaking.matchfunction.BackfillResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='backfill_proposal', full_name='accelbyte.matchmaking.matchfunction.BackfillResponse.backfill_proposal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2965,
  serialized_end=3065,
)


_BACKFILLTICKET_TEAM = _descriptor.Descriptor(
  name='Team',
  full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.Team',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_ids', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.Team.user_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parties', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.Team.parties', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1543,
  serialized_end=1628,
)

_BACKFILLTICKET_PARTIALMATCH = _descriptor.Descriptor(
  name='PartialMatch',
  full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tickets', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.tickets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='teams', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.teams', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='region_preferences', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.region_preferences', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_attributes', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.match_attributes', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='backfill', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.backfill', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='server_name', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.server_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='client_version', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch.client_version', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3375,
  serialized_end=3666,
)

_BACKFILLTICKET = _descriptor.Descriptor(
  name='BackfillTicket',
  full_name='accelbyte.matchmaking.matchfunction.BackfillTicket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ticket_id', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.ticket_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_pool', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.match_pool', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='CreatedAt', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.CreatedAt', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partial_match', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.partial_match', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='match_session_id', full_name='accelbyte.matchmaking.matchfunction.BackfillTicket.match_session_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_BACKFILLTICKET_TEAM, _BACKFILLTICKET_PARTIALMATCH, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3068,
  serialized_end=3666,
)

_GETSTATCODESREQUEST.fields_by_name['rules'].message_type = _RULES
_VALIDATETICKETREQUEST.fields_by_name['ticket'].message_type = _TICKET
_VALIDATETICKETREQUEST.fields_by_name['rules'].message_type = _RULES
_ENRICHTICKETREQUEST.fields_by_name['ticket'].message_type = _TICKET
_ENRICHTICKETREQUEST.fields_by_name['rules'].message_type = _RULES
_ENRICHTICKETRESPONSE.fields_by_name['ticket'].message_type = _TICKET
_MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS.fields_by_name['scope'].message_type = _SCOPE
_MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS.fields_by_name['rules'].message_type = _RULES
_MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS.containing_type = _MAKEMATCHESREQUEST
_MAKEMATCHESREQUEST.fields_by_name['parameters'].message_type = _MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS
_MAKEMATCHESREQUEST.fields_by_name['ticket'].message_type = _TICKET
_MAKEMATCHESREQUEST.oneofs_by_name['request_type'].fields.append(
  _MAKEMATCHESREQUEST.fields_by_name['parameters'])
_MAKEMATCHESREQUEST.fields_by_name['parameters'].containing_oneof = _MAKEMATCHESREQUEST.oneofs_by_name['request_type']
_MAKEMATCHESREQUEST.oneofs_by_name['request_type'].fields.append(
  _MAKEMATCHESREQUEST.fields_by_name['ticket'])
_MAKEMATCHESREQUEST.fields_by_name['ticket'].containing_oneof = _MAKEMATCHESREQUEST.oneofs_by_name['request_type']
_MATCHRESPONSE.fields_by_name['match'].message_type = _MATCH
_MATCH_TEAM.fields_by_name['parties'].message_type = _PARTY
_MATCH_TEAM.containing_type = _MATCH
_MATCH.fields_by_name['tickets'].message_type = _TICKET
_MATCH.fields_by_name['teams'].message_type = _MATCH_TEAM
_MATCH.fields_by_name['match_attributes'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_MATCH.fields_by_name['server_pool'].message_type = _SERVERPOOL
_TICKET_PLAYERDATA.fields_by_name['attributes'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_TICKET_PLAYERDATA.containing_type = _TICKET
_TICKET_LATENCIESENTRY.containing_type = _TICKET
_TICKET.fields_by_name['CreatedAt'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_TICKET.fields_by_name['players'].message_type = _TICKET_PLAYERDATA
_TICKET.fields_by_name['ticket_attributes'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_TICKET.fields_by_name['latencies'].message_type = _TICKET_LATENCIESENTRY
_BACKFILLPROPOSAL_TEAM.fields_by_name['parties'].message_type = _PARTY
_BACKFILLPROPOSAL_TEAM.containing_type = _BACKFILLPROPOSAL
_BACKFILLPROPOSAL.fields_by_name['CreatedAt'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_BACKFILLPROPOSAL.fields_by_name['added_tickets'].message_type = _TICKET
_BACKFILLPROPOSAL.fields_by_name['proposed_teams'].message_type = _BACKFILLPROPOSAL_TEAM
_BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS.fields_by_name['scope'].message_type = _SCOPE
_BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS.fields_by_name['rules'].message_type = _RULES
_BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS.containing_type = _BACKFILLMAKEMATCHESREQUEST
_BACKFILLMAKEMATCHESREQUEST.fields_by_name['parameters'].message_type = _BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS
_BACKFILLMAKEMATCHESREQUEST.fields_by_name['backfill_ticket'].message_type = _BACKFILLTICKET
_BACKFILLMAKEMATCHESREQUEST.oneofs_by_name['request_type'].fields.append(
  _BACKFILLMAKEMATCHESREQUEST.fields_by_name['parameters'])
_BACKFILLMAKEMATCHESREQUEST.fields_by_name['parameters'].containing_oneof = _BACKFILLMAKEMATCHESREQUEST.oneofs_by_name['request_type']
_BACKFILLMAKEMATCHESREQUEST.oneofs_by_name['request_type'].fields.append(
  _BACKFILLMAKEMATCHESREQUEST.fields_by_name['backfill_ticket'])
_BACKFILLMAKEMATCHESREQUEST.fields_by_name['backfill_ticket'].containing_oneof = _BACKFILLMAKEMATCHESREQUEST.oneofs_by_name['request_type']
_BACKFILLRESPONSE.fields_by_name['backfill_proposal'].message_type = _BACKFILLPROPOSAL
_BACKFILLTICKET_TEAM.fields_by_name['parties'].message_type = _PARTY
_BACKFILLTICKET_TEAM.containing_type = _BACKFILLTICKET
_BACKFILLTICKET_PARTIALMATCH.fields_by_name['tickets'].message_type = _TICKET
_BACKFILLTICKET_PARTIALMATCH.fields_by_name['teams'].message_type = _BACKFILLTICKET_TEAM
_BACKFILLTICKET_PARTIALMATCH.fields_by_name['match_attributes'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_BACKFILLTICKET_PARTIALMATCH.containing_type = _BACKFILLTICKET
_BACKFILLTICKET.fields_by_name['CreatedAt'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_BACKFILLTICKET.fields_by_name['partial_match'].message_type = _BACKFILLTICKET_PARTIALMATCH
DESCRIPTOR.message_types_by_name['GetStatCodesRequest'] = _GETSTATCODESREQUEST
DESCRIPTOR.message_types_by_name['StatCodesResponse'] = _STATCODESRESPONSE
DESCRIPTOR.message_types_by_name['ValidateTicketRequest'] = _VALIDATETICKETREQUEST
DESCRIPTOR.message_types_by_name['ValidateTicketResponse'] = _VALIDATETICKETRESPONSE
DESCRIPTOR.message_types_by_name['EnrichTicketRequest'] = _ENRICHTICKETREQUEST
DESCRIPTOR.message_types_by_name['EnrichTicketResponse'] = _ENRICHTICKETRESPONSE
DESCRIPTOR.message_types_by_name['MakeMatchesRequest'] = _MAKEMATCHESREQUEST
DESCRIPTOR.message_types_by_name['MatchResponse'] = _MATCHRESPONSE
DESCRIPTOR.message_types_by_name['Scope'] = _SCOPE
DESCRIPTOR.message_types_by_name['Rules'] = _RULES
DESCRIPTOR.message_types_by_name['Party'] = _PARTY
DESCRIPTOR.message_types_by_name['Match'] = _MATCH
DESCRIPTOR.message_types_by_name['ServerPool'] = _SERVERPOOL
DESCRIPTOR.message_types_by_name['Ticket'] = _TICKET
DESCRIPTOR.message_types_by_name['BackfillProposal'] = _BACKFILLPROPOSAL
DESCRIPTOR.message_types_by_name['BackfillMakeMatchesRequest'] = _BACKFILLMAKEMATCHESREQUEST
DESCRIPTOR.message_types_by_name['BackfillResponse'] = _BACKFILLRESPONSE
DESCRIPTOR.message_types_by_name['BackfillTicket'] = _BACKFILLTICKET
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetStatCodesRequest = _reflection.GeneratedProtocolMessageType('GetStatCodesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSTATCODESREQUEST,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.GetStatCodesRequest)
  })
_sym_db.RegisterMessage(GetStatCodesRequest)

StatCodesResponse = _reflection.GeneratedProtocolMessageType('StatCodesResponse', (_message.Message,), {
  'DESCRIPTOR' : _STATCODESRESPONSE,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.StatCodesResponse)
  })
_sym_db.RegisterMessage(StatCodesResponse)

ValidateTicketRequest = _reflection.GeneratedProtocolMessageType('ValidateTicketRequest', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATETICKETREQUEST,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.ValidateTicketRequest)
  })
_sym_db.RegisterMessage(ValidateTicketRequest)

ValidateTicketResponse = _reflection.GeneratedProtocolMessageType('ValidateTicketResponse', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATETICKETRESPONSE,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.ValidateTicketResponse)
  })
_sym_db.RegisterMessage(ValidateTicketResponse)

EnrichTicketRequest = _reflection.GeneratedProtocolMessageType('EnrichTicketRequest', (_message.Message,), {
  'DESCRIPTOR' : _ENRICHTICKETREQUEST,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.EnrichTicketRequest)
  })
_sym_db.RegisterMessage(EnrichTicketRequest)

EnrichTicketResponse = _reflection.GeneratedProtocolMessageType('EnrichTicketResponse', (_message.Message,), {
  'DESCRIPTOR' : _ENRICHTICKETRESPONSE,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.EnrichTicketResponse)
  })
_sym_db.RegisterMessage(EnrichTicketResponse)

MakeMatchesRequest = _reflection.GeneratedProtocolMessageType('MakeMatchesRequest', (_message.Message,), {

  'MakeMatchesParameters' : _reflection.GeneratedProtocolMessageType('MakeMatchesParameters', (_message.Message,), {
    'DESCRIPTOR' : _MAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.MakeMatchesRequest.MakeMatchesParameters)
    })
  ,
  'DESCRIPTOR' : _MAKEMATCHESREQUEST,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.MakeMatchesRequest)
  })
_sym_db.RegisterMessage(MakeMatchesRequest)
_sym_db.RegisterMessage(MakeMatchesRequest.MakeMatchesParameters)

MatchResponse = _reflection.GeneratedProtocolMessageType('MatchResponse', (_message.Message,), {
  'DESCRIPTOR' : _MATCHRESPONSE,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.MatchResponse)
  })
_sym_db.RegisterMessage(MatchResponse)

Scope = _reflection.GeneratedProtocolMessageType('Scope', (_message.Message,), {
  'DESCRIPTOR' : _SCOPE,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Scope)
  })
_sym_db.RegisterMessage(Scope)

Rules = _reflection.GeneratedProtocolMessageType('Rules', (_message.Message,), {
  'DESCRIPTOR' : _RULES,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Rules)
  })
_sym_db.RegisterMessage(Rules)

Party = _reflection.GeneratedProtocolMessageType('Party', (_message.Message,), {
  'DESCRIPTOR' : _PARTY,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Party)
  })
_sym_db.RegisterMessage(Party)

Match = _reflection.GeneratedProtocolMessageType('Match', (_message.Message,), {

  'Team' : _reflection.GeneratedProtocolMessageType('Team', (_message.Message,), {
    'DESCRIPTOR' : _MATCH_TEAM,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Match.Team)
    })
  ,
  'DESCRIPTOR' : _MATCH,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Match)
  })
_sym_db.RegisterMessage(Match)
_sym_db.RegisterMessage(Match.Team)

ServerPool = _reflection.GeneratedProtocolMessageType('ServerPool', (_message.Message,), {
  'DESCRIPTOR' : _SERVERPOOL,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.ServerPool)
  })
_sym_db.RegisterMessage(ServerPool)

Ticket = _reflection.GeneratedProtocolMessageType('Ticket', (_message.Message,), {

  'PlayerData' : _reflection.GeneratedProtocolMessageType('PlayerData', (_message.Message,), {
    'DESCRIPTOR' : _TICKET_PLAYERDATA,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Ticket.PlayerData)
    })
  ,

  'LatenciesEntry' : _reflection.GeneratedProtocolMessageType('LatenciesEntry', (_message.Message,), {
    'DESCRIPTOR' : _TICKET_LATENCIESENTRY,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Ticket.LatenciesEntry)
    })
  ,
  'DESCRIPTOR' : _TICKET,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.Ticket)
  })
_sym_db.RegisterMessage(Ticket)
_sym_db.RegisterMessage(Ticket.PlayerData)
_sym_db.RegisterMessage(Ticket.LatenciesEntry)

BackfillProposal = _reflection.GeneratedProtocolMessageType('BackfillProposal', (_message.Message,), {

  'Team' : _reflection.GeneratedProtocolMessageType('Team', (_message.Message,), {
    'DESCRIPTOR' : _BACKFILLPROPOSAL_TEAM,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillProposal.Team)
    })
  ,
  'DESCRIPTOR' : _BACKFILLPROPOSAL,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillProposal)
  })
_sym_db.RegisterMessage(BackfillProposal)
_sym_db.RegisterMessage(BackfillProposal.Team)

BackfillMakeMatchesRequest = _reflection.GeneratedProtocolMessageType('BackfillMakeMatchesRequest', (_message.Message,), {

  'MakeMatchesParameters' : _reflection.GeneratedProtocolMessageType('MakeMatchesParameters', (_message.Message,), {
    'DESCRIPTOR' : _BACKFILLMAKEMATCHESREQUEST_MAKEMATCHESPARAMETERS,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest.MakeMatchesParameters)
    })
  ,
  'DESCRIPTOR' : _BACKFILLMAKEMATCHESREQUEST,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillMakeMatchesRequest)
  })
_sym_db.RegisterMessage(BackfillMakeMatchesRequest)
_sym_db.RegisterMessage(BackfillMakeMatchesRequest.MakeMatchesParameters)

BackfillResponse = _reflection.GeneratedProtocolMessageType('BackfillResponse', (_message.Message,), {
  'DESCRIPTOR' : _BACKFILLRESPONSE,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillResponse)
  })
_sym_db.RegisterMessage(BackfillResponse)

BackfillTicket = _reflection.GeneratedProtocolMessageType('BackfillTicket', (_message.Message,), {

  'Team' : _reflection.GeneratedProtocolMessageType('Team', (_message.Message,), {
    'DESCRIPTOR' : _BACKFILLTICKET_TEAM,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillTicket.Team)
    })
  ,

  'PartialMatch' : _reflection.GeneratedProtocolMessageType('PartialMatch', (_message.Message,), {
    'DESCRIPTOR' : _BACKFILLTICKET_PARTIALMATCH,
    '__module__' : 'app.proto.matchFunction_pb2'
    # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillTicket.PartialMatch)
    })
  ,
  'DESCRIPTOR' : _BACKFILLTICKET,
  '__module__' : 'app.proto.matchFunction_pb2'
  # @@protoc_insertion_point(class_scope:accelbyte.matchmaking.matchfunction.BackfillTicket)
  })
_sym_db.RegisterMessage(BackfillTicket)
_sym_db.RegisterMessage(BackfillTicket.Team)
_sym_db.RegisterMessage(BackfillTicket.PartialMatch)


DESCRIPTOR._options = None
_TICKET_LATENCIESENTRY._options = None

_MATCHFUNCTION = _descriptor.ServiceDescriptor(
  name='MatchFunction',
  full_name='accelbyte.matchmaking.matchfunction.MatchFunction',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=3669,
  serialized_end=4361,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetStatCodes',
    full_name='accelbyte.matchmaking.matchfunction.MatchFunction.GetStatCodes',
    index=0,
    containing_service=None,
    input_type=_GETSTATCODESREQUEST,
    output_type=_STATCODESRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ValidateTicket',
    full_name='accelbyte.matchmaking.matchfunction.MatchFunction.ValidateTicket',
    index=1,
    containing_service=None,
    input_type=_VALIDATETICKETREQUEST,
    output_type=_VALIDATETICKETRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='EnrichTicket',
    full_name='accelbyte.matchmaking.matchfunction.MatchFunction.EnrichTicket',
    index=2,
    containing_service=None,
    input_type=_ENRICHTICKETREQUEST,
    output_type=_ENRICHTICKETRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='MakeMatches',
    full_name='accelbyte.matchmaking.matchfunction.MatchFunction.MakeMatches',
    index=3,
    containing_service=None,
    input_type=_MAKEMATCHESREQUEST,
    output_type=_MATCHRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='BackfillMatches',
    full_name='accelbyte.matchmaking.matchfunction.MatchFunction.BackfillMatches',
    index=4,
    containing_service=None,
    input_type=_BACKFILLMAKEMATCHESREQUEST,
    output_type=_BACKFILLRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_MATCHFUNCTION)

DESCRIPTOR.services_by_name['MatchFunction'] = _MATCHFUNCTION

# @@protoc_insertion_point(module_scope)
